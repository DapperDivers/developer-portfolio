name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install ESLint and plugins
        run: |
          npm install --save-dev eslint eslint-plugin-react eslint-plugin-security
          
      - name: Verify ESLint configuration
        run: |
          echo "ESLint configuration file contents:"
          cat .eslintrc.json
          echo ""
          echo "ESLint version:"
          npx eslint --version
          
      - name: Run linting with npx
        run: npx eslint src --ext .js,.jsx
        
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  deploy-docs:
    name: Deploy documentation
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/master' && 
      (github.event_name == 'workflow_dispatch' || 
       contains(toJSON(github.event.commits.*.modified), 'docs/') || 
       contains(toJSON(github.event.commits.*.added), 'docs/'))
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Docsify
        run: npm install -g docsify-cli
      
      - name: Build documentation
        run: |
          mkdir -p build
          cp -r docs/* build/
          cp docs/index.md build/README.md || true
          
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages
          target-folder: docs