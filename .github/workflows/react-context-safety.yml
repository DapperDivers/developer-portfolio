name: React Context Safety Checks

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  context-safety:
    name: Check React Context Safety
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run React usage analyzer
      run: |
        node react-usage-analyzer.cjs > reports/react-usage-report.txt
        cat reports/react-usage-report.txt
    
    - name: Check for critical React API issues
      run: |
        if grep -q "HIGH RISK FILES" reports/react-usage-report.txt; then
          echo "⚠️ High-risk React API usage detected!"
          grep -A 10 "HIGH RISK FILES" reports/react-usage-report.txt
          echo "::warning::High-risk React API usage detected. See full report for details."
        else
          echo "✅ No high-risk React API usage detected."
        fi
    
    - name: Run ESLint with context safety rules
      run: |
        npx eslint --config eslint.config.react-context-safety.js src/context src/hooks/useContext*.ts src/hooks/useContext*.tsx --ext .js,.jsx,.ts,.tsx --format=stylish

    - name: Check TypeScript types in context files
      run: |
        yarn tsc --noEmit src/context/**/*.ts src/context/**/*.tsx
    
    - name: Check production build
      if: ${{ github.event_name == 'pull_request' }}
      env:
        NODE_ENV: production
      run: |
        yarn build
        echo "✅ Production build completed successfully"
    
    - name: Upload analysis artifacts
      uses: actions/upload-artifact@v3
      with:
        name: react-context-analysis
        path: reports/react-usage-report.txt
        retention-days: 14
