/**
 * headerName Component Styles
 * 
 * Styling for the headerName component
 * This project uses Tailwind CSS. See tailwind.config.js for configuration.
 * For custom styles beyond Tailwind, use the classes defined below.
 */

.headername {
  /* Add custom styles here that go beyond Tailwind's utilities */
  
  /* For application-wide styles, consider adding to:
   * - tailwind.config.js (for theme customization)
   * - src/assets/css/styles.css (for global styles) 
   */
}

/* You can use Tailwind's responsive prefixes in your component's JSX:
 * <div className="md:flex lg:p-4 dark:bg-gray-800"></div>
 * 
 * Or add custom responsive styles here:
 */
@media (max-width: 768px) {
  .headername {
    /* Add mobile-specific styles if needed */
  }
}

@font-face {
  font-family: 'Agustina';
  src: url('/fonts/agustina/Agustina.otf') format('opentype');
}

.cyber-text-animation {
  margin: 0;
  font-family: 'Agustina';
  font-weight: 600;
  font-size: 1.25rem;
  letter-spacing: 2px;
  line-height: 1;
  text-shadow: 0 0 5px rgba(var(--color-cyan-rgb), 0.7), 0 0 10px rgba(var(--color-cyan-rgb), 0.5);
  position: relative;
  display: inline-block;
  overflow: visible;
  transition: all 0.3s ease;
  cursor: pointer;
}

.cyber-text-animation:hover {
  text-shadow: 0 0 10px rgba(var(--color-cyan-rgb), 1), 
               0 0 20px rgba(var(--color-cyan-rgb), 0.8),
               0 0 30px rgba(var(--color-cyan-rgb), 0.6);
  transform: translateY(-2px);
  color: #fff;
}

/* Blinking cursor effect */
.cursor {
  display: inline-block;
  width: 8px;
  height: 20px;
  background: var(--color-cyan);
  margin-left: 5px;
  animation: cursor-blink 1.2s infinite;
  vertical-align: middle;
  box-shadow: 0 0 5px rgba(var(--color-cyan-rgb), 0.7), 
              0 0 10px rgba(var(--color-cyan-rgb), 0.5);
}

@keyframes cursor-blink {
  0%, 49% { opacity: 1; }
  50%, 100% { opacity: 0; }
}

/* Scanline effect */
.cyber-text-animation .scanline {
  content: "";
  position: absolute;
  top: 0;
  left: -10%;
  width: 120%;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(var(--color-cyan-rgb), 0) 20%,
    rgba(var(--color-cyan-rgb), 0.3) 50%,
    rgba(var(--color-cyan-rgb), 0) 80%,
    transparent 100%
  );
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease;
  transform: skewX(-20deg);
}

.cyber-text-animation:hover .scanline {
  opacity: 1;
  animation: scan 0.75s linear infinite;
}

@keyframes scan {
  0% { transform: translateY(-100%) skewX(-20deg); }
  100% { transform: translateY(100%) skewX(-20deg); }
}

/* Underline effect */
.cyber-text-animation::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 100%;
  height: 2px;
  background: var(--color-cyan);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
  box-shadow: 0 0 10px rgba(var(--color-cyan-rgb), 1), 
              0 0 20px rgba(var(--color-cyan-rgb), 0.8);
}

.cyber-text-animation:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}
