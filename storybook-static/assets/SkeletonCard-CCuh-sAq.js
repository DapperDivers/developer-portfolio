import{j as s,a as e}from"./emotion-react-jsx-runtime.browser.esm-Cpdipq7a.js";import{r as c}from"./index-B6-Y_Zgq.js";import{P as n}from"./index-Co38GRlK.js";const i=({type:o="project",index:r=0,className:d="",style:a={}})=>{const t=`${`${o}-card-skeleton`} ${d}`.trim(),l=`${r*.15}s`;switch(o){case"project":return s("div",{className:t,style:{...a,animationDelay:l},"aria-hidden":"true","data-testid":"skeleton-project",children:[e("div",{className:"skeleton-image"}),s("div",{className:"skeleton-content",children:[e("div",{className:"skeleton-title"}),e("div",{className:"skeleton-description"}),e("div",{className:"skeleton-tags"}),e("div",{className:"skeleton-actions"})]}),e("div",{className:"skeleton-shimmer"})]});case"experience":return s("div",{className:t,style:{...a,animationDelay:l},"aria-hidden":"true","data-testid":"skeleton-experience",children:[e("div",{className:"skeleton-header"}),s("div",{className:"skeleton-content",children:[e("div",{className:"skeleton-image-circle"}),e("div",{className:"skeleton-title"}),e("div",{className:"skeleton-subtitle"}),e("div",{className:"skeleton-description"}),e("div",{className:"skeleton-description"})]}),e("div",{className:"skeleton-shimmer"})]});case"skill":return s("div",{className:t,style:{...a,animationDelay:l},"aria-hidden":"true","data-testid":"skeleton-skill",children:[e("div",{className:"skeleton-icon"}),e("div",{className:"skeleton-name"}),e("div",{className:"skeleton-shimmer"})]});default:return s("div",{className:t,style:{...a,animationDelay:l},"aria-hidden":"true","data-testid":"skeleton-default",children:[s("div",{className:"skeleton-content",children:[e("div",{className:"skeleton-title"}),e("div",{className:"skeleton-description"})]}),e("div",{className:"skeleton-shimmer"})]})}};i.propTypes={type:n.oneOf(["project","experience","skill","default"]),index:n.number,className:n.string,style:n.object};const v=c.memo(i);i.__docgenInfo={description:`SkeletonCard component for use as loading placeholders

@component
@param {Object} props - Component props
@param {string} [props.type='project'] - Type of skeleton ('project', 'experience', 'skill')
@param {number} [props.index=0] - Index for staggered animations
@param {string} [props.className=''] - Additional CSS class names
@param {Object} [props.style={}] - Additional inline styles
@returns {React.ReactElement} SkeletonCard component`,methods:[],displayName:"SkeletonCard",props:{type:{defaultValue:{value:"'project'",computed:!1},description:"",type:{name:"enum",value:[{value:"'project'",computed:!1},{value:"'experience'",computed:!1},{value:"'skill'",computed:!1},{value:"'default'",computed:!1}]},required:!1},index:{defaultValue:{value:"0",computed:!1},description:"",type:{name:"number"},required:!1},className:{defaultValue:{value:"''",computed:!1},description:"",type:{name:"string"},required:!1},style:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1}}};export{v as S};
